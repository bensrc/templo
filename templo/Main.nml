/*
 *  Templo Compiler
 *  Copyright (c)2008 Motion-Twin
 *
 *  This library is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU Lesser General Public
 *  License as published by the Free Software Foundation; either
 *  version 2.1 of the License, or (at your option) any later version.
 *
 *  This library is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 *  Lesser General Public License or the LICENSE file for more details.
 */
open Templo.Ast;

var must_be_empty = ["area";"base";"basefont";"br";"col";"frame";"hr";"img";"input";"isindex";"link";"meta";"param"];
var boolean_attributes = ["compact";"nowrap";"ismap";"declare";"noshade";"checked";"disabled";"readonly";"multiple";"selected";"noresize";"defer"]

function report(msg,p) {
	if p == Lexer.null_pos then	{
		Stack.dump IO.stderr Stack.exc();
		IO.printf IO.stderr "Exception : %s\n" msg
	} else
	IO.printf IO.stderr "%s:%d: %s\n" (Lexer.source p,Lexer.line p,msg);
	Sys.exit(-1);
}

try {
	var head = "Temploc v2.0 - (c)2008 Motion-Twin\nUsage : temploc [options] <files>";
	var files = &[];
	var output = &None;
	var decl = [
		("-output",Args.String (function(o) output := Some o),"<dir> : specify output directory");
	];
	Args.parse head decl (function(file) files := file :: *files);
	List.iter (function(file) {
		// parse
		var ch = IO.read_file file true;
		var lex = Lexer.create Buffer.create();
		Lexer.input lex file ch 1 0;
		var el = Templo.Parser.parse lex;
		IO.close_in ch;
		print el;
	}) (*files);
} catch {
	| Templo.Lexer.Error(msg,pos) -> report Templo.Lexer.error_msg(msg) pos
	| Templo.Parser.Error(msg,pos) -> report Templo.Parser.error_msg(msg) pos
	| e ->
		Stack.dump IO.stderr Stack.exc();
		IO.printf IO.stderr "Exception : %s\n" string(e);
		Sys.exit (-1);
}